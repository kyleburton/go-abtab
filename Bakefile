#!/usr/bin/env bash

function get_url() {
  URL="$1"
  F="$(basename "$URL")"
  if [ -f "$F" ]; then
    bake_echo_green "OK: have $F ($URL)"
  else
    bake_echo_blue  "OK: downloading $F ($URL)"
    wget "$URL"
  fi
}

function init_fixtures () {
  bake_cd fixtures
  if [ -e .done ]; then
    bake_echo_green "OK: have fixture data"
    return 0
  fi

  bake_echo_green "OK: getting fixture data"
  test -d galbithink.org || mkdir galbithink.org
  cd galbithink.org

  if [ ! -f get-files.sh ]; then
    wget http://www.galbithink.org/names/us200.htm 
    grep '>names<' us200.htm  | perl -ane 'print "test -f $1 || wget http://www.galbithink.org/names/$1\n" if /HREF="([^"]+)"/' >> get-files.sh
  fi

  bake_echo_blue "OK: Getting names files..."
  bash get-files.sh

  get_url http://www.galbithink.org/names/rutland1296-7.txt
  get_url http://www.galbithink.org/names/guild.txt
  get_url http://www.galbithink.org/names/stratsol.txt
  get_url http://www.galbithink.org/names/eang.txt
  get_url http://www.galbithink.org/names/ncumb.txt

  cd ..

  touch .done
  bake_echo_green "OK: obtained fixtures"
}

bake_task init "Download sample data sets to be used as test fixtures"
function init () {
  init_fixtures
}

bake_task run-tests "Run the black-box tests (see ./tests)"
function run-tests () {
  bake_cd tests
  bash run-tests.sh
}

bake_task lint-code "Run 'go fmt' on the codebase"
function lint-code () {
  for f in $(find . -name '*.go'); do
    go fmt $f
  done
}
